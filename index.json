[{"authors":null,"categories":null,"content":"I am graduate student at the department of Economics at Emory University. I started in my program in the Fall semester of 2017. Originally, I am from Quito-Ecuador. I obtained my Bachelor degree at PUCE. I spent several years working on policy research in several public institutions in my home country: SRI, INEC, Instituto de la Ciudad. After that I moved to Atlanta, to continue my studies. My area of work is Econometrics, with focus on Networks.\n","date":1619136002,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1619136002,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am graduate student at the department of Economics at Emory University. I started in my program in the Fall semester of 2017. Originally, I am from Quito-Ecuador. I obtained my Bachelor degree at PUCE.","tags":null,"title":"Diego Rojas","type":"authors"},{"authors":["Diego Rojas"],"categories":["Demo"],"content":"About this tutorial This is the first part of the tutorial to create a website using Hugo and RStudio. We are going to use a particular flavor of Hugo templates called Wowchemy (previosuly know as academic Hugo).\nWith Wowchemy, the default option is to deploy the site using a subscription based service called Netlify. The process is very well explained on their documentation.\nAs advocates for free technology we are going to opt for a second way to modify and deploy your website using your own PC and Github Pages.\nIn this iteration we are going to proceed with the setup steps that you will have to do before actually modifying and deploying your website.\nInstall Required software R and Rstudio In order to make your personal website you will first need to install R for your operating system. YOu will also need an installation of RStudio.\nYou can follow the instructions in the following tutorial\nInstall git Depending on your OS you will need to install git. YOu can follow the instructions in the following page:\nHugo installation (OS dependent) Windows First install Scoop. This is a package manager that works similar to the package managers in Linux.\nAccess Windows Powershell and type:\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser iwr -useb get.scoop.sh | iex\r Reply yes to the question: Do you want to change the execution policy?\nInstall Hugo and its dependencies by typing:\nscoop install git go hugo-extended\r MacOS Open the Terminal\nInstall Homebrew, the Mac package manager, by pasting the following command and pressing the Enter\n/bin/bash -c \u0026quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\u0026quot;\r update the repositories\nbrew update \u0026amp;\u0026amp; brew upgrade\r Install Hugo and its dependencies:\nbrew install git golang hugo\nOpen the hidden ~/.zshrc (or ~/.bashrc) file in a text editor, add the following line, and restart your Terminal app so that Hugo can find the location of its Go dependency.\nexport PATH=$PATH:/usr/local/go/bin\r Linux For Ubuntu based distributions\nDownload the Hugo Extended installer for Debian (hugo_extended__Linux-64bit.deb)\nOpen a terminal on the directory where you placed your installer and type\nsudo dpkg -i \u0026lt;path_to_deb_file\u0026gt;/hugo_extended_\u0026lt;VERSION\u0026gt;_Linux-64bit.deb\r Download a template The provider wowchemy has six different templates you can use:\n Academic/Resumé Researcher Research Group Blog Project Documentation Hello World  For this tutorial we are going to use the first.\nTo proceed go to the directory where you want to create your website using your file explorer and open a terminal. If you are using WIndows you should open a power shell. Now download the template by typing:\ngit clone https://github.com/wowchemy/starter-academic.git\r Once you have cloned the repository, go to the location of the repository on the file typing:\ncd \u0026lt;your-path\u0026gt;/starter-academic\r You can view the template by typing:\nhugo server\r If no errors are shown in the compilation you can paste the following on the address bar of your web browser:\nhttp://localhost:1313/\r Setting up R-studio Stop the compilation by pressing Crtl+c. Then go to your website folder by typing:\ncd \u0026lt;your-path\u0026gt;/starter-academic\r First you move the the config.yaml of your project to the root folder by typing:\nmv ./config/_default/config.yaml .\r Now open RStudio and install the required package blogdown. Type the following on the console.\ninstall.packages(\u0026quot;blogdown\u0026quot;)\r Then using RStudio GUI open the project: /starter-academic/academic.Rproj\nTo compile your site and preview it in RStudio type the following:\nblogdown:::serve_site()\r   The template is mobile first with a responsive design to ensure that your site looks stunning on every device.   ","date":1619136002,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619136002,"objectID":"80ad63cf133f2000aee8404db89588c3","permalink":"https://dieguer.github.io/webtutorial/post/step1/","publishdate":"2021-04-23T00:00:02Z","relpermalink":"/webtutorial/post/step1/","section":"post","summary":"Install all required programs and applications to create your website.","tags":["Academic"],"title":"Step one: setup requirements and acquire the template","type":"post"},{"authors":["Diego Rojas"],"categories":["Demo"],"content":"About this tutorial This is the first part of the tutorial to create a website using Hugo and RStudio. We are going to use a particular flavor of Hugo templates called Wowchemy (previosuly know as academic Hugo).\nWith Wowchemy, the default option is to deploy the site using a subscription based service called Netlify. The process is very well explained on their documentation.\nAs advocates for free technology we are going to opt for a second way to modify and deploy your website using your own PC and Github Pages.\nIn this iteration we are going to proceed with the some of the most basic and common ways to modify your website.\nThe following sections are based on the documentation of Wowchemy. Some materials, like schematics, are a direct reproduction of the materials found on Wowchemy. We offer a reinterpretation and examples.\nNotice that the modifications that are possible are many. In this tutorial we are going to mention only the most basic, however, the limit of how much you can achieve is much higher than what we will cover. To see all the possibilities please checkout the official documentation\nUnderstanding the structure of the website Behind the scenes, the tools that build your website are a collection of Markdown files that are the vessel for the content you want to display. By default, the template you acquired through the Github repo should have a structure similar to the shown below.\n 📄 LICENSE.md 📄 README.md 📄 academic.Rproj - (optional) For RStudio users, otherwise can be deleted 📁 assets  📁 media  📄 icon.png - (optional) add your website icon here 📄 logo.png - (optional) add your logo here     📁 config  📁 _default  📄 config.yaml - define your site name and URL 📄 languages.yaml - edit this for non-English or multilingual sites 📄 menus.yaml - define your site menu 📄 params.yaml - personalize your site     📄 config.yaml - (optional) a dummy file for RStudio compatibility - non-RStudio users can delete 📁 content  📁 authors - user profiles  📁 admin - your username (can rename)   📁 home - your homepage - personalize the homepage with widgets 📁 post 📁 publication 📁 talk   📁 data  📄 page_sharer.toml - (optional) customize social sharing buttons   📄 netlify.toml - (optional) defines Hugo version for deploying with Netlify 📁 scripts - (optional) scripts to maintain the template repository - can be deleted 📁 static  📁 admin - (optional) your Netlify CMS admin panel   📄 update_academic.sh - (optional) a script to help update Academic 📄 view.sh - (optional) a script to view your site locally  Yes! I know it is a lot! But for the sake of editing content in your website, and changing the appereance inside the pre-established parameters of the template, you should only be concerned with two directories:\n 📁 config 📁 content  The first one allows to change the general parameters, e.g., template of colors and font you are using. The second is where the most of the work is done and the editing of the site content is due.\nChoosing a color and font configuration Wowchemy provides twelve different color templates and five font configurations.\n themes: 1950s, apogee, coffee, cyberpunk, dark, earth, forest, minimal, mr_robot, ocean, rose, and strawberry. fonts: classic, minimal, mr_robot, cyberpunk, rose, and native.  You can choose as you prefer. To do it you can edit the file:\n 📁 config  📁 _default  📄 config.yaml      There are several parameters that control the appeareance of the site in this file. To choose the color theme, and font you will need change the following options:\n# Appearance\rtheme: minimal\rday_night: true\rfont: ''\rfont_size: L\r For example one can choose the color theme Mr. Robot with the font rose, and size medium you have to change the code to:\n# Appearance\rtheme: mr_robot\rday_night: true\rfont: 'rose'\rfont_size: M\r If you are more of a risk lover (like me), you can create download a template from Wowchemy\u0026rsquo;s repo, you can rename it and put it in the folder:\n 📁 data  📁 themes  📄 test_theme.toml      In there you can modify color options, among others(mind your changes!) using HTML color codes. You can do something similar to create your own font. Download a font file from the repository. Rename it and paste it in:\n 📁 data  📁 themes  📄 test_theme.toml   📁 fonts  📄 test_font.toml      After you are done, you can change the ./config/_default/config.yaml so it reflects:\n # Appearance\rtheme: test_theme.toml\rday_night: true\rfont: 'test_font'\rfont_size: M\r Managing the sections and pages of your site Content Structure The majority of the edits and change will have place in the files that are located in the content folder. By default you have the following structure.\n 📁 content  📁 admin (used to host site using netlify) 📁 authors (contains the authors metadata) 📁 event (used to create a page for an event) 📁 home (home page where you show case all the site) 📁 post (blog like page where posts can be populated) 📁 project (used to create a project page) 📁 publication (used to list all publications) 📁 slides (used to show slides as desired)    Each folder in the content directory represents a page in your website as long as a file named index.md with a coherent header is placed on the folder. Some of them are pages associated with widgets that are placed in the home page. Wowchemy uses a set of widgets to populate the html content. The list of widgets available can be found on the documentation. Alternatively you can create your own widget (requires a bit more effort and programming knowledge!).\nCreating a page To create a page in your site simply create a folder (e.g. test), in the content directory and create an index.md file with a coherent header:\n---\rtitle: An example title\rsummary: Here we describe how to add a page to your site.\rdate: \u0026quot;2018-06-28T00:00:00Z\u0026quot;\rreading_time: false # Show estimated reading time?\rshare: false # Show social sharing links?\rprofile: false # Show author profile?\rcomments: false # Show comments?\r# Optional header image (relative to `assets/media/` folder).\rheader:\rcaption: \u0026quot;\u0026quot;\rimage: \u0026quot;\u0026quot;\r---\rAdd your **content** here...\r You can add this new page to the top Menu by modifying the file config/_default/menus.yaml by creating an entry:\n[[main]]\rname = \u0026quot;My new page\u0026quot; # A link title for your page.\rurl = \u0026quot;test/\u0026quot; # The URL of your page.\rweight = 50 # The position of your page in the menu.\r Removing pages In order to remove pages you can either remove the associated folder of the page. Or you can edit the active option on the header:\n---\rtitle: An example title\rsummary: Here we describe how to add a page to your site.\rdate: \u0026quot;2018-06-28T00:00:00Z\u0026quot;\ractive: false\r---\rAdd your **content** here...\r Edit your home page By far the most important page on your site is the home page. This one it self is a complex object. This is a page that host several widgets. Hence it is called a widget page. This means that it holds widgets in it as sections of the site. Each sections is stored as an \u0026lt;file.md\u0026gt; with an appropiate header. The default structure of the home section is the following:\n 📁 home  📄 about.md 📄 accomplishments.md 📄 contact.md 📄 demo.md 📄 experience.md 📄 featured.md 📄 index.md 📄 posts.md 📄 projects.md 📄 publications.md 📄 skills.md 📄 tags.md 📄 talks.md    Creating and removing sections According to your needs and preferences you can choose which of this sections to retain. For example, if you are not into blogs, you can choose to remove such section deleting the posts.md file.\nTo create new sections you can add a new file content/home/\u0026lt;your_section\u0026gt;.md that must have a header and content as shown:\n---\r# An example widget.\rwidget: \u0026lt;widget option\u0026gt;\r# This file represents a page section.\rheadless: true\r# Order that this section appears on the page. (higher weight = later in the section)\rweight: \u0026lt;weight\u0026gt;\r# Section title\rtitle: Example title\r# Section subtitle\rsubtitle: Example subtitle\r# Section design\rdesign:\r\u0026lt;your design options\u0026gt;\r---\rAdd Your Markdown content Here\r You can include a link to the section by adding an entry in the file config/_default/menus.yaml as follows:\n[[main]]\rname = \u0026quot;Click bait\u0026quot; # A name for the link.\rurl = \u0026quot;/#\u0026lt;your_section\u0026gt;\u0026quot; # URL of the section.\rweight = 10 # Position of the link in the menu\r To understand each widget and wheter to use it on your section or not we recommend browsing through each widget type description.\nPreviewing your site Every time you make an edit on the markdown files and save it the active server you are using. In the case of RStudio, the blogdown::server_site() should update automatically by refreshing the page. Usually, when you change images or aesthetics options you should blogdown::stop_server() and start it again to see the changes implemented.\n","date":1619136001,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619136000,"objectID":"22f6b79002d2f245242785cf73ed27db","permalink":"https://dieguer.github.io/webtutorial/post/step2/","publishdate":"2021-04-23T00:00:01Z","relpermalink":"/webtutorial/post/step2/","section":"post","summary":"Change colors, fonts, and put your content on the site.","tags":["Academic"],"title":"Step two: customize and add content","type":"post"},{"authors":["Diego Rojas"],"categories":["Demo"],"content":"About this tutorial Create a Website with RStudio: Deploy your website This is the first part of the tutorial to create a website using Hugo and RStudio. We are going to use a particular flavor of Hugo templates called Wowchemy (previosuly know as academic Hugo).\nWith Wowchemy, the default option is to deploy the site using a subscription based service called Netlify. The process is very well explained on their documentation.\nAs advocates for free technology we are going to opt for a second way to modify and deploy your website using your own PC and Github Pages.\nIn this iteration we are going to proceed with the some of the most basic and common ways to modify your website.\nSetting up github First you will need to log-in or create a github account\nNext you will need to create an empty repository where you are going to save your local files from the website build. A detailed set on instructions to this is can be fund this link\nOnce the empty repo is created, with any name you like, for example tutorial_gs, we are ready to copy the contents of your website to the repo.\n  First connect your local repository to the github repo.\n Open a terminal and navigate to the site of your website: cd \u0026lt;your-path\u0026gt;/starter-academic connect to the repo with the online repo by typing: git remote set-url origin \u0026lt;YOUR_REPO_URL\u0026gt;.git For Example git remote set-url origin https://github.com/tutorialgse/tutorial_gs.git To verify the origin type: git remote -v    Next you have to commit the changes you have made\n For this your global user.name and user.email should be configured already on your machine. You can check if that is the case with: git config --list --show-origin if not set yet, you can use : git config --global user.name \u0026quot;John Doe\u0026quot; git config --global user.email johndoe@example.com then add all the changes made to your repo by typing: git add . Now commit all the changes: git commit -m \u0026quot;First commit on the web\u0026quot; Push your repo to your new empty repo typing git push origin master you will be asked for your credentials after this    Now we are going to create the second repo to host the page. For this to work you have to name the repo as follows \u0026lt;USERNAME\u0026gt;.github.io. Where \u0026lt;USERNAME\u0026gt; is the user name that you chose for your account. We will save the generated site to this repository.\nIn your ./config/_default/config.yaml file, set baseurl = \u0026quot;https://\u0026lt;USERNAME\u0026gt;.github.io/\u0026quot;\nNext remove the directory ./public.\nWe are going to create the submodule to populate our website deployment repository\ngit submodule add -f -b master https://github.com/\u0026lt;USERNAME\u0026gt;/\u0026lt;USERNAME\u0026gt;.github.io.git public\nDeploy your site Generate the website again by typing on the console:\nhugo\rcd publi\rgit add .\rgit commit -m \u0026quot;Build website\u0026quot;\rgit push origin master\rcd ..\r After this, go to \u0026quot;https://\u0026lt;USERNAME\u0026gt;.github.io/\u0026quot; and you should be able to see your website.\nUpdating your site To update your websites make your modifications as per the second tutorial. Then add and commit your changes\ncd \u0026lt;your-path\u0026gt;/starter-academic\rgit add .\rgit commit -m \u0026quot;update your website\u0026quot; git push origin master\r After that re-generate the website by typing:\nhugo\nWhen the process is done, proceed to the public/ directory, then add, commit and push all changes.\ncd \u0026lt;your-path\u0026gt;/starter-academic/public\rgit add .\rgit commit -m \u0026quot;update your website web repo\u0026quot; git push origin master\r After this, go to \u0026quot;https://\u0026lt;USERNAME\u0026gt;.github.io/\u0026quot;, after a couple of minutes you should be able to see your website updated.\n","date":1619136000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1587600000,"objectID":"e23277e7626e75b13375920780796437","permalink":"https://dieguer.github.io/webtutorial/post/step3/","publishdate":"2021-04-23T00:00:00Z","relpermalink":"/webtutorial/post/step3/","section":"post","summary":"Deploy your website using Github pages, learn how to deploy changes too.","tags":["Academic"],"title":"Step three: deploy your website","type":"post"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://dieguer.github.io/webtutorial/about/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/webtutorial/about/","section":"","summary":"","tags":null,"title":"","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://dieguer.github.io/webtutorial/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/webtutorial/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]